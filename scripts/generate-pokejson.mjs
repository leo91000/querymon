#!/usr/bin/env node
// Generate apps/web/src/data/pokejson.ts from apps/web/src/pokeapi/*.json
import { promises as fs } from 'node:fs';
import path from 'node:path';

const SRC_DIR = path.resolve('apps/web/src/pokeapi');
const OUT_FILE = path.resolve('apps/web/src/data/pokejson.ts');

function varName(bn) {
  return (bn.replace(/[^A-Za-z0-9_]/g, '_').replace(/^([0-9])/, 'f_$1'));
}

async function main() {
  const files = (await fs.readdir(SRC_DIR)).filter(f => f.endsWith('.json')).sort();
  const imports = files.map(f => `import ${varName(f)} from '../pokeapi/${f}';`).join('\n');
  const mapEntries = files.map(f => `  '${f}': ${varName(f)},`).join('\n');
  const content = `// Auto-generated by scripts/generate-pokejson.mjs\n${imports}\n\nexport const POKEJSON: Record<string, any> = {\n${mapEntries}\n};\n\nexport type PokeJsonMap = typeof POKEJSON;\n`;
  await fs.mkdir(path.dirname(OUT_FILE), { recursive: true });
  await fs.writeFile(OUT_FILE, content);
  console.log(`Wrote ${OUT_FILE} with ${files.length} entries.`);
}

main().catch(err => { console.error(err); process.exit(1); });

